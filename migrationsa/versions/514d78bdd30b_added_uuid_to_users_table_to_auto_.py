"""added uuid to users table to auto-generate random id

Revision ID: 514d78bdd30b
Revises: 5c671cf7368b
Create Date: 2025-03-19 19:12:22.216516

"""
from typing import Sequence, Union

from alembic import op
from sqlalchemy.dialects.postgresql import UUID
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '514d78bdd30b'
down_revision: Union[str, None] = '5c671cf7368b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # Step 1: Add new UUID columns with default UUID generation
    op.add_column('users', sa.Column('id_new', UUID(as_uuid=True), nullable=False, server_default=sa.text("gen_random_uuid()")))
    op.add_column('posts', sa.Column('id_new', UUID(as_uuid=True), nullable=False, server_default=sa.text("gen_random_uuid()")))
    op.add_column('comments', sa.Column('id_new', UUID(as_uuid=True), nullable=False, server_default=sa.text("gen_random_uuid()")))

    # Step 2: Convert existing data from string to UUID
    op.execute("UPDATE users SET id_new = id::uuid")
    op.execute("UPDATE posts SET id_new = id::uuid")
    op.execute("UPDATE comments SET id_new = id::uuid")

    # Step 3: Drop the old columns
    op.drop_column('users', 'id')
    op.drop_column('posts', 'id')
    op.drop_column('comments', 'id')

    # Step 4: Rename new columns to match original names
    op.alter_column('users', 'id_new', new_column_name='id', existing_type=UUID)
    op.alter_column('posts', 'id_new', new_column_name='id', existing_type=UUID)
    op.alter_column('comments', 'id_new', new_column_name='id', existing_type=UUID)



def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.alter_column('posts', 'id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.alter_column('comments', 'id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    # ### end Alembic commands ###
